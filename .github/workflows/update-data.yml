name: Update Data

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:

  build:
    name: Update data
    runs-on: ubuntu-latest
    outputs:
      repo-updated: ${{ steps.git-step.outputs.updated }}
    env:
        USER_ID: ${{ secrets.STUDENT_ID }}
        PASSWORD: ${{ secrets.STUDENT_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - uses: nanasess/setup-chromedriver@master
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          # Installing Python Pip Dependencies
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run the scrapers
        run: |
          # stop the build if there are Python syntax errors or undefined names
          python scrapers/scrape_groups.py
          python scrapers/scrape_rooms.py
      - name: Format everything
        run: |
          yarn install
          yarn format
      - name: Upload all changes to GIT
        id: git-step
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          [[ -z $(git status -uno --porcelain) ]] && echo "No updates detected, no need for push" && exit 0;
          git commit -m "update data"
          git push origin main --force
          echo "::set-output name=updated::yes"

  release:
    name: Prepare new data release
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.build.outputs.repo-updated }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: 'main'
      - name: Prepare zip files
        run: |
          mkdir assets
          zip --junk-paths -r assets/rooms.zip rooms
          zip --junk-paths -r assets/timetable.zip timetable
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          draft: false
          prerelease: false
      - name: Upload release assets
        id: upload-release-assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
          assets_path: ./assets
